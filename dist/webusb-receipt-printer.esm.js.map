{"version":3,"file":"webusb-receipt-printer.esm.js","sources":["../src/event-emitter.js","../src/main.js"],"sourcesContent":["class EventEmitter {\n    constructor(device) {\n        this._events = {};\n    }\n\n    on(e, f) {\n        this._events[e] = this._events[e] || [];\n        this._events[e].push(f);\n    }\n\n    emit(e, ...args) {\n        let fs = this._events[e];\n        if (fs) {\n            fs.forEach(f => {\n                setTimeout(() => f(...args), 0);\n            });\n        }\n    }        \n}\n\nexport default EventEmitter;","import EventEmitter from \"./event-emitter.js\";\n\nconst DeviceProfiles = [\n\n\t/* POS-8022 and similar printers */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x0483, productId: 0x5743 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'default'\n\t},\n\n\t/* POS-5805, POS-8360 and similar printers */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x0416, productId: 0x5011 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'zjiang'\n\t},\n\n\t/* MPT-II and similar printers */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x0483, productId: 0x5840 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'mpt'\n\t},\n\n\t/* Samsung SRP */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x0419 }, { vendorId: 0x1504 }\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'bixolon'\n\t},\n\n\t/* Star */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x0519 }\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\n\t\t/*\n\n\t\t\tvendorId\tproductId\tproductName\n\n\t\t\t\t\t\t\t\t\tFVP10\t\t\t\tstar-line\n\t\t\t0x0519\t\t0x0001\t\tTSP650II\t\t\tstar-line\n\t\t\t\t\t\t\t\t\tTSP700II\t\t\tstar-line\n\t\t\t\t\t\t\t\t\tTSP800II\t\t\tstar-line\n\t\t\t\t\t\t\t\t\tSP700\t\t\t\tstar-line\n\t\t\t0x0519 \t\t0x0003\t\tTSP100II\t\t\tstar-graphics\n\t\t\t\t\t\t\t\t\tTSP100III\t\t\tstar-graphics\n\t\t\t\t\t\t\t\t\tTSP100IV\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x0017\t\tmPOP\t\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x0019\t\tmC-Label3\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x000b\t\tBSC10\t\t\t\tesc-pos\n\t\t\t0x0519\t\t0x0011\t\tBSC10BR\t\t\t\tesc-pos\n\t\t\t0x0519\t\t0x001b\t\tBSC10II\t\t\t\tesc-pos\n\t\t\t0x0519\t\t0x0043\t\tSM-S230i\t\t\t\n\t\t\t0x0519\t\t0x0047\t\tmC-Print3\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x0049\t\tmC-Print2\t\t\tstar-prnt\n\n\t\t*/\n\n\t\tlanguage: device => {\n\t\t\tlet language = 'star-line';\n\t\t\tlet name = device.productName;\n\n\t\t\t/* \n\t\t\t\tEven though the product names are a bit messy, the best way to distinguish between \n\t\t\t\tmodels is by the product name. It is not possible to do it by the productId alone, \n\t\t\t\tas the same productId is used for different models supporting different languages.\n\n\t\t\t\tBut we do need to normalize the names a bit, as they are not consistent.\n\n\t\t\t\tFor example:\t\n\t\t\t\tTSP654 (STR_T-001) -> TSP650\n\t\t\t\tStar TSP143IIIU -> TSP100III\t\t\t\t\t\t\t\t\t\n\t\t\t*/\n\n\t\t\tname = name.replace(/^Star\\s+/i, '');\n\t\t\tname = name.replace(/^TSP(1|4|6|7|8|10)(13|43)(.*)?$/, (m, p1, p2, p3) => 'TSP' + p1 + '00' + (p3 || ''));\n\t\t\tname = name.replace(/^TSP(55|65)(1|4)(.*)?$/, (m, p1, p2, p3) => 'TSP' + p1 + '0' + (p3 || ''));\n\t\t\tname = name.replace(/^TSP([0-9]+)(II|III|IV|V|VI)?(.*)?$/, (m, p1, p2) => 'TSP' + p1 + (p2 || ''));\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'TSP100IV':\n\t\t\t\tcase 'mPOP':\n\t\t\t\tcase 'mC-Label3':\n\t\t\t\tcase 'mC-Print3':\n\t\t\t\tcase 'mC-Print2':\n\t\t\t\t\tlanguage = 'star-prnt';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TSP100':\n\t\t\t\tcase 'TSP100II':\n\t\t\t\tcase 'TSP100III':\n\t\t\t\t\tlanguage = 'star-graphics';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BSC10':\n\t\t\t\tcase 'BSC10BR':\n\t\t\t\tcase 'BSC10II':\n\t\t\t\t\tlanguage = 'esc-pos';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn language;\n\t\t},\n\n\t\tcodepageMapping: 'star'\n\t},\n\n\t/* Epson */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x04b8 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'epson'\n\t},\n\n\t/* Citizen */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x1d90 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'citizen'\n\t},\n\n\t/* HP */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x05d9 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'hp'\n\t},\n\n\t/* Fujitsu */\n\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x04c5 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'epson'\n\t},\n\n\t/* Dtronic */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x0fe6, productId: 0x811e },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'epson'\n\t},\n\n\t/* Xprinter */\n\t{\n\t\tfilters: [\n\t\t\t{ vendorId: 0x1fc9, productId: 0x2016 },\n\t\t],\n\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: 'esc-pos',\n\t\tcodepageMapping: 'xprinter'\n\t}\n]\n\nclass ReceiptPrinterDriver { }\n\nclass WebUSBReceiptPrinter extends ReceiptPrinterDriver {\n\n\t#emitter;\n\n\t#device = null;\n\t#profile = null;\n\t#endpoints = {\n\t\tinput: null,\n\t\toutput: null\n\t};\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.#emitter = new EventEmitter();\n\n\t\tnavigator.usb.addEventListener('disconnect', event => {\n\t\t\tif (this.#device == event.device) {\n\t\t\t\tthis.#emitter.emit('disconnected');\n\t\t\t}\n\t\t});\n\t}\n\n\tasync connect() {\n\t\ttry {\n\t\t\tlet device = await navigator.usb.requestDevice({\n\t\t\t\tfilters: DeviceProfiles.map(i => i.filters).reduce((a, b) => a.concat(b))\n\t\t\t});\n\n\t\t\tif (device) {\n\t\t\t\treturn await this.#open(device);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.log('Could not connect! ' + error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync reconnect(previousDevice) {\n\t\tlet devices = await navigator.usb.getDevices();\n\n\t\tlet device = devices.find(device => device.serialNumber == previousDevice.serialNumber);\n\n\t\tif (!device) {\n\t\t\tdevice = devices.find(device => device.vendorId == previousDevice.vendorId && device.productId == previousDevice.productId);\n\t\t}\n\n\t\tif (device) {\n\t\t\tawait this.#open(device);\n\t\t}\n\t}\n\n\tasync #open(device) {\n\t\ttry {\n\t\t\tthis.#device = device;\n\n\t\t\tthis.#profile = DeviceProfiles.find(\n\t\t\t\titem => item.filters.some(\n\t\t\t\t\tfilter => filter.vendorId && filter.productId ? filter.vendorId == this.#device.vendorId && filter.productId == this.#device.productId : filter.vendorId == this.#device.vendorId\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tawait this.#device.open();\n\t\t\tawait this.#device.selectConfiguration(this.#profile.configuration);\n\t\t\tawait this.#device.claimInterface(this.#profile.interface);\n\n\t\t\tlet iface = this.#device.configuration.interfaces.find(i => i.interfaceNumber == this.#profile.interface);\n\n\t\t\tthis.#endpoints.output = iface.alternate.endpoints.find(e => e.direction == 'out');\n\t\t\tthis.#endpoints.input = iface.alternate.endpoints.find(e => e.direction == 'in');\n\n\t\t\tawait this.#device.reset();\n\n\t\t\tthis.#emitter.emit('connected', {\n\t\t\t\ttype: 'usb',\n\t\t\t\tmanufacturerName: this.#device.manufacturerName,\n\t\t\t\tproductName: this.#device.productName,\n\t\t\t\tserialNumber: this.#device.serialNumber,\n\t\t\t\tvendorId: this.#device.vendorId,\n\t\t\t\tproductId: this.#device.productId,\n\t\t\t\tlanguage: await this.#evaluate(this.#profile.language),\n\t\t\t\tcodepageMapping: await this.#evaluate(this.#profile.codepageMapping)\n\t\t\t});\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tconsole.log('Could not open device! ' + error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync #evaluate(expression) {\n\t\tif (typeof expression == 'function') {\n\t\t\treturn await expression(this.#device);\n\t\t}\n\n\t\treturn expression;\n\t}\n\n\tasync listen() {\n\t\tif (this.#endpoints.input) {\n\t\t\tthis.#read();\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tasync #read() {\n\t\tif (!this.#device) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await this.#device.transferIn(this.#endpoints.input.endpointNumber, 64);\n\n\t\t\tif (result instanceof USBInTransferResult) {\n\t\t\t\tif (result.data.byteLength) {\n\t\t\t\t\tthis.#emitter.emit('data', result.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.#read();\n\t\t} catch (e) {\n\t\t}\n\t}\n\n\tasync disconnect() {\n\t\tif (!this.#device) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.#device.close();\n\n\t\tthis.#device = null;\n\t\tthis.#profile = null;\n\n\t\tthis.#emitter.emit('disconnected');\n\t}\n\n\tasync print(command) {\n\t\tif (this.#device && this.#endpoints.output) {\n\t\t\ttry {\n\t\t\t\tawait this.#device.transferOut(this.#endpoints.output.endpointNumber, command);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t}\n\n\taddEventListener(n, f) {\n\t\tthis.#emitter.on(n, f);\n\t}\n}\n\n\nexport default WebUSBReceiptPrinter;"],"names":["EventEmitter","constructor","device","this","_events","on","e","f","push","emit","args","fs","forEach","setTimeout","DeviceProfiles","filters","vendorId","productId","configuration","interface","language","codepageMapping","name","productName","replace","m","p1","p2","p3","ReceiptPrinterDriver","WebUSBReceiptPrinter","emitter","profile","endpoints","input","output","super","navigator","usb","addEventListener","event","async","requestDevice","map","i","reduce","a","b","concat","open","error","console","log","previousDevice","devices","getDevices","find","serialNumber","item","some","filter","selectConfiguration","claimInterface","iface","interfaces","interfaceNumber","alternate","direction","reset","type","manufacturerName","evaluate","expression","read","result","transferIn","endpointNumber","USBInTransferResult","data","byteLength","close","command","transferOut","n"],"mappings":"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"}